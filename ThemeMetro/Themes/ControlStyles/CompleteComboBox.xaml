<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:ThemeMetro.Controls"
    xmlns:behavior ="clr-namespace:ThemeMetro.Controls.Behaviors"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ThemeMetro;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="CompleteComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1" 
                            HorizontalAlignment="Right" 
                            Margin="0" 
                            Padding="2" 
                            SnapsToDevicePixels="true" 
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="arrow" Style="{StaticResource Icon.Down.Triangle.Small}" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CompleteComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource HoverBackgroundColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverFontColorBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectBackgroundColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverFontColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
                                  Background="Transparent" 
                                  Focusable="false" 
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="CompleteComboBoxEditableTemplate" TargetType="{x:Type ctrl:CompleteComboBox}">
        <Grid x:Name="templateRoot" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup" 
                    AllowsTransparency="true" 
                    Grid.ColumnSpan="2"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                    PopupAnimation="Slide"                 
                    Placement="Bottom">
                <Border x:Name="dropDownBorder" 
                        BorderBrush="{DynamicResource ControlBorderColorBrush}" 
                        BorderThickness="1"                            
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        Background="{TemplateBinding Background}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" 
                                            Fill="{Binding Background, ElementName=dropDownBorder}" 
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" 
                                            Margin="{TemplateBinding Padding}"
                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <AdornerDecorator Grid.ColumnSpan="2">
                <Border x:Name="PART_Border"                                
                        SnapsToDevicePixels="true"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"/>
            </AdornerDecorator>

            <ToggleButton x:Name="toggleButton" 
                          Grid.ColumnSpan="2" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource CompleteComboBoxToggleButton}"/>

            <Grid SnapsToDevicePixels="True">
                <!--Watermark-->
                <TextBlock x:Name="PART_Watermark"                                           
                           Foreground="{DynamicResource WatermarkTextFontColorBrush}"                                           
                           Padding="{TemplateBinding Padding}"
                           Visibility="Collapsed"
                           VerticalAlignment="Center" />
                <TextBox x:Name="PART_EditableTextBox" 
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                         Margin="{TemplateBinding Padding}" 
                         Style="{StaticResource ComboBoxEditableTextBox}"                         
                         CaretBrush="{TemplateBinding Foreground}"
                         Padding="{TemplateBinding Padding}"
                         Foreground="{DynamicResource SystemFontColorBrush}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" SourceName="PART_EditableTextBox" Value="True"/>
                    <Condition Property="Validation.HasError" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Red"/>
            </MultiTrigger>

            <Trigger Property="behavior:ComboBoxBehavior.InputFilter" Value="OnlyInteger">
                <Setter Property="behavior:TextBoxBehavior.InputFilter" Value="OnlyInteger" TargetName="PART_EditableTextBox"/>
                <Setter Property="input:InputMethod.IsInputMethodEnabled" Value="false" TargetName="PART_EditableTextBox"/>
            </Trigger>

            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CompleteComboBoxStyle" TargetType="{x:Type ctrl:CompleteComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource SystemFontColorBrush}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource SystemColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderColorBrush}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CompleteComboBoxItemStyle}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="1,0"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource CompleteComboBoxEditableTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Validation.HasError" Value="False" />
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="IsEditable" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundColorBrush}"/>
            </MultiTrigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red"  />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>